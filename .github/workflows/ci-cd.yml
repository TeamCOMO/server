name: CI/CD

on:
  push:
    branches: [ "dev", "main"]
  pull_request:
    branches: [ "dev", "main" ]

permissions:
  contents: read

jobs:
  CI:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
      token: ${{ secrets.ACTION_SUBMODULE_TOKEN }} 
      submodules: true
      #submodules을 통해 중요 정보(yml) 가져오기
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
    
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}  # 김승진 아이디로 설정
        password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}  # 김승진 비밀번호로 설정

    - name: Build and Docker Push # 만들어진 빌드 스크립트 실행
      run: |
        ./build.sh
    
  CD:
    steps:
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}  # 김승진 아이디로 설정
        password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}  # 김승진 비밀번호로 설정

    - name: Run deployment script on remote host
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST_DEV }}
        #username: ${{ secrets.USERNAME }} #key로 접근해서 필요 없어 보임
        #password: ${{ secrets.PASSWORD }}
        port: 22
        key: ${{ secrets.COMO_SSH_KEY }}
        run: | # 배포 스크립트를 통해 이미지 pull하고 컨테이너 실행
          ./build.sh
